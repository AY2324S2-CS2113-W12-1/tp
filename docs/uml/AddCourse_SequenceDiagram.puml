@startuml
autoactivate on
participant ": Timetable" as Timetable
participant ": Course" as Course

[-> Timetable : addCourse(course)
loop until current inner ArrayList is term that new course belongs or later \n or end of courses reached
    Timetable -> Timetable : courses.get(i).get(0)
    Timetable --> Timetable : currCourse
    Timetable -> Course : check year and term of currCourse
    deactivate Course
end

opt current inner ArrayList is not term that new course belongs
    Timetable -> Timetable : courses.add(i, new ArrayList<Course>()) \n (insert an ArrayList representing the new course's year and term)
    deactivate Timetable
end
Timetable -> Timetable : courses.get(i).add(course)
deactivate Timetable
[<-- Timetable
@enduml